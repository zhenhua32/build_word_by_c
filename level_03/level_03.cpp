// level_03.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

#include <iostream>

int main()
{
    std::cout << "Hello World!\n";

    // 定义数组, 部分给初始值, 后面的都是0
	int arr[5] = { 1,2,3};
	// 打印整个数组
	for (int i = 0; i < 5; i++)
	{
		std::cout << arr[i] << std::endl;
	}
    
	// 不指定长度, 自动根据初始值个数确定长度
	int a[] = { 1,2,3 };

	// 二维数组
	int arr2[2][3] = { {1,2,3}, {4,5,6} };
	// 打印二维数组
	for (int i = 0; i < 2; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			std::cout << arr2[i][j] << std::endl;
		}
	}
	
	// 初始化字符数组
	// 字符数组, 需要手动在末尾添加'\0'
	char str0[] = { 'h', 'e', 'l', 'l', 'o', '\0' };
	// 字符串常量, 会自动在末尾添加'\0'
	char str1[] = "hello";
	char str2[] = { "hello" };
	// 可以手动指定数组的长度, 注意计算最小长度时不要忘记加上最后的 \0
	char str3[100] = "hello ";

	// 字符串处理函数
	// 将字符数组输出到屏幕上
	puts(str0);
	// 将两个字符数组连接, 并存储到第一个字符数组中
	strcat_s(str3, str1);
	printf("%s\n", str3);
	// 将第二个字符数组的内容复制到第一个字符数组中
	strcpy_s(str3, str1);
	printf("%s\n", str3);
	// 比较两个字符数组的内容是否相同
	int ret = strcmp(str1, str2);
	printf("%s == %s? %d\n", str1, str2, ret);
	// 字符串长度
	strcpy_s(str3, "中国");
	int len = strlen(str3);
	printf("字符串是 %s, 长度是 %d\n", str3, len);
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
